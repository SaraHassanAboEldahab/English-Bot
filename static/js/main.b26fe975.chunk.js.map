{"version":3,"sources":["images/english.png","images/left-arrow.png","contexts/dataContext.js","images/send.png","images/bot-icon.png","components/Chat.js","components/Bot.js","App.js","index.js"],"names":["Context","React","createContext","DataContext","children","useState","newData","setNewData","fetchData","a","axios","get","data","useEffect","Provider","value","socket","io","Chat","message","useContext","dataContext","from","text","messages","setMessages","msg","setMsg","on","checkResult","result","console","log","corrections","length","toLowerCase","replace","toLocaleLowerCase","StyledCorrectDiv","StyledMessages","map","index","StyledBotDiv","src","botIcon","alt","StyledMeDiv","StyledDiv","onSubmit","e","preventDefault","emit","sendMsg","onChange","target","type","placeholder","send","styled","form","div","Bot","active","setActive","Header","Container","StyledBackImg","onClick","leftArrow","StyledH1","StyledBotImg","englishBot","Content","className","img","h1","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b26fe975.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/english.9c170a25.png\";","export default __webpack_public_path__ + \"static/media/left-arrow.903af5d7.png\";","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//here we create context object\r\nconst Context = React.createContext();\r\n\r\nexport const DataContext = ({ children }) => {\r\n  const [newData, setNewData] = useState({});\r\n  const fetchData = async () => {\r\n    // const { data } = await axios.get(`/api/bot/${window.botSettings.id}`);\r\n    // const { data } = await axios.get(\r\n    //   `https://chat-plugv1.herokuapp.com/api/bot/614e63e0632c5bf001304b56?fbclid=IwAR2yTQqEV0CooA_1o3IUj0GyUgRTx00PpYFA9V_dBBphDn7wDowCsX6ZVVA`\r\n    // );\r\n    const { data } = await axios.get(\r\n      \"https://english-bot-test.herokuapp.com/api/bot-flow\"\r\n    );\r\n    setNewData(data);\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return <Context.Provider value={newData}>{children}</Context.Provider>;\r\n};\r\n\r\nexport default Context;\r\n","export default __webpack_public_path__ + \"static/media/send.01c24b89.png\";","export default __webpack_public_path__ + \"static/media/bot-icon.cfbb308b.png\";","import React, { useState, useContext, useEffect } from \"react\";\r\nimport dataContext from \"../contexts/dataContext\";\r\nimport styled from \"styled-components\";\r\nimport send from \"../images/send.png\";\r\nimport { io } from \"socket.io-client\";\r\nimport botIcon from \"../images/bot-icon.png\";\r\n\r\nconst socket = io(\"wss://english-bot-test.herokuapp.com/\");\r\n\r\nconst Chat = () => {\r\n  const { message } = useContext(dataContext);\r\n  const [messages, setMessages] = useState([\r\n    { from: \"English BOT\", text: \"👋🏻👋🏻\" },\r\n    { from: \"English BOT\", text: message?.text },\r\n  ]);\r\n\r\n  const [msg, setMsg] = useState({ text: \"\" });\r\n\r\n  useEffect(() => {\r\n    socket.on(\"checkGrammerResult\", ({ message, result: checkResult }) => {\r\n      console.log(msg, message);\r\n      const { result, corrections } = checkResult;\r\n      if (\r\n        corrections?.length === 0 ||\r\n        message.toLowerCase().replace(/\\ /g, \"\") ==\r\n          result?.toLocaleLowerCase().replace(/\\ /g, \"\")\r\n      ) {\r\n        setMessages([\r\n          ...messages,\r\n          { from: \"English BOT\", text: \"u r right ✅ \" },\r\n        ]);\r\n        return;\r\n      }\r\n      setMessages([\r\n        ...messages,\r\n        {\r\n          from: \"English BOT\",\r\n          text: (\r\n            <StyledCorrectDiv>\r\n              <div>\r\n                you are too close , the correct answer is\r\n                <h4>{result}</h4>\r\n              </div>\r\n            </StyledCorrectDiv>\r\n          ),\r\n        },\r\n      ]);\r\n    });\r\n  }, [messages]);\r\n\r\n  const sendMsg = (e) => {\r\n    e.preventDefault();\r\n    setMessages([...messages, { from: \"Me\", text: msg.text }]);\r\n    socket.emit(\"checkGrammer\", msg);\r\n    setMsg({ text: \"\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledMessages>\r\n        {messages.map(({ from, text }, index) => (\r\n          <>\r\n            {from === \"English BOT\" ? (\r\n              <StyledBotDiv key={index}>\r\n                <img src={botIcon} alt=\" \" />\r\n                <span>{text}</span>\r\n              </StyledBotDiv>\r\n            ) : (\r\n              <StyledMeDiv key={index}>\r\n                <span>{text}</span>\r\n              </StyledMeDiv>\r\n            )}\r\n          </>\r\n        ))}\r\n      </StyledMessages>\r\n      <StyledDiv onSubmit={(e) => sendMsg(e)}>\r\n        <input\r\n          value={msg.text}\r\n          onChange={(e) => setMsg({ text: e.target.value })}\r\n          type=\"text\"\r\n          placeholder=\"send a message...\"\r\n        />\r\n        <button type=\"submit\">\r\n          <img src={send} alt=\"\" />\r\n        </button>\r\n      </StyledDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n\r\nconst StyledDiv = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  border-top: 1px solid rgb(230, 230, 230);\r\n  input {\r\n    border: none;\r\n    height: 40px;\r\n    width: 80%;\r\n    padding: 10px 20px;\r\n    outline: 0;\r\n  }\r\n  button {\r\n    border: none;\r\n    background-color: white;\r\n    width: 18%;\r\n    display: flex;\r\n    justify-content: end;\r\n    align-items: center;\r\n    img {\r\n      width: 32px;\r\n      height: 32px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledMessages = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 400px;\r\n  min-height: 400px;\r\n  background: white;\r\n  overflow-y: auto;\r\n  padding: 15px 20px;\r\n  span {\r\n    width: fit-content;\r\n    height: fit-content;\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledBotDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  span {\r\n    background-color: #717171;\r\n    color: white;\r\n    padding: 10px;\r\n  }\r\n  img {\r\n    width: 40px;\r\n    height: 40px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledMeDiv = styled.div`\r\n  margin-left: auto;\r\n  span {\r\n    display: block;\r\n    background-color: #0073a5;\r\n    color: white;\r\n    margin-left: 10px;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledCorrectDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  h4 {\r\n    display: inline-block;\r\n    color: #74eaf4;\r\n    margin: 0px 0px 0px 10px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport englishBot from \"../images/english.png\";\r\nimport leftArrow from \"../images/left-arrow.png\";\r\nimport Chat from \"./Chat\";\r\n\r\nconst Bot = () => {\r\n  const [active, setActive] = useState(false);\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Container>\r\n          {active && (\r\n            <StyledBackImg\r\n              onClick={() => setActive(false)}\r\n              src={leftArrow}\r\n              alt=\"\"\r\n            />\r\n          )}\r\n\r\n          <StyledH1>\r\n            <StyledBotImg src={englishBot} alt=\"\" />\r\n            <span> English Bot </span>\r\n          </StyledH1>\r\n          <p>I can help you to improve your english.</p>\r\n        </Container>\r\n      </Header>\r\n      <Container>\r\n        <Content>\r\n          {!active && (\r\n            <StyledDiv>\r\n              <h3>Get Started</h3>\r\n              <div>\r\n                <span className=\"replyNote\">My usual reply time</span>\r\n                <br />\r\n                <span className=\"replyTome\">🕓 Under 1 min</span>\r\n              </div>\r\n              <button onClick={() => setActive(true)}>Get Started</button>\r\n            </StyledDiv>\r\n          )}\r\n          {active && <Chat />}\r\n        </Content>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bot;\r\n\r\n//styles\r\nconst Container = styled.div`\r\n  padding: 0px 25px;\r\n`;\r\n\r\nconst StyledBackImg = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  margin: 0px 10px 20px 0px;\r\n  cursor: pointer;\r\n`;\r\nconst StyledBotImg = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n`;\r\nconst Header = styled.div`\r\n  color: white;\r\n  background-color: #14243d;\r\n  padding: 40px 20px 100px 20px;\r\n  p {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst StyledH1 = styled.h1`\r\n  margin: 10px 0px 0px 0px;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  margin: -70px 0px 0px 0px;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  box-shadow: rgb(0 0 0 / 10%) 0px 4px 15px 0px,\r\n    rgb(0 0 0 / 10%) 0px 1px 2px 0px, rgb(32 43 57 / 50%) 0px -2px 0px 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  padding: 15px 20px;\r\n  .replyNote {\r\n    color: gray;\r\n    margin: 0px 0px 5px 0px;\r\n  }\r\n  .replyTome {\r\n    font-weight: bold;\r\n  }\r\n  button {\r\n    border: none;\r\n    background-color: #763c1a;\r\n    color: white;\r\n    padding: 15px 20px;\r\n    border-radius: 30px;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    width: 200px;\r\n    margin: 30px 0px 40px 0px;\r\n    transition: background-color 0.1s ease-in;\r\n    &:hover {\r\n      background-color: #bc6a39;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\nimport Bot from \"./components/Bot\";\nimport { DataContext } from \"./contexts/dataContext\";\n\nconst App = () => {\n  return (\n    <DataContext>\n      <Bot />\n    </DataContext>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./App.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}